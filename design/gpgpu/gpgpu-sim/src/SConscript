# -*- mode:python -*-

# Copyright (c) 2011 Mark D. Hill and David A. Wood
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met: redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer;
# redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution;
# neither the name of the copyright holders nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#


Import('*')

gpgpu_sources = []

Export('gpgpu_sources')

#SimObject('Bridge.py')

Source('abstract_hardware_model.cc', append={'CXXFLAGS': '-Wno-error=format -Wno-error=missing-field-initializers'})
Source('debug.cc')
Source('gpgpusim_entrypoint.cc')
Source('option_parser.cc', append={'CXXFLAGS': '-Wno-error=ignored-qualifiers'})
Source('statwrapper.cc')
Source('stream_manager.cc')
Source('trace.cc')

import os
cuda_sdk = os.environ['CUDAHOME']
#env.Append(CCFLAGS=['-I'+cuda_sdk+'/include', '-I'+cuda_sdk+'/common/inc/'])
env.Append(CCFLAGS=['-I'+cuda_sdk+'/include'])
env.Append(CPPDEFINES=['-DCUDART_VERSION=10000', '-DYYDEBUG'])

gpgpusim_path = Dir('./gpgpu-sim').srcnode().abspath
env.Append(CPPPATH=[gpgpusim_path])

env.Append(CPPDEFINES=['-DHALF_ENABLE_CPP11_TYPE_TRAITS',
		'-DHALF_ENABLE_CPP11_CSTDINT',
		'-DHALF_ENABLE_CPP11_HASH',
		'-DHALF_ENABLE_CPP11_CONSTEXPR',
		'-DHALF_ENABLE_CPP11_NOEXCEPT'])

#CCFLAGS.append('-g3')
#CCFLAGS.append('-fPIC')
#CCFLAGS.append('-std=c++0x')
